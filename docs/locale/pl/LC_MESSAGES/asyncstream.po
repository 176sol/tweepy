# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2009-2022, Joshua Roesslein
# This file is distributed under the same license as the tweepy package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2022.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: tweepy 4.4.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-01-08 05:35+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"

#: ../../asyncstream.rst:7
msgid ":class:`tweepy.asynchronous.AsyncStream` --- Asynchronous Stream Reference"
msgstr ""

#: of tweepy.asynchronous.streaming.AsyncStream:1
msgid "Stream realtime Tweets asynchronously"
msgstr ""

#: of tweepy.asynchronous.streaming.AsyncStream
#: tweepy.asynchronous.streaming.AsyncStream.filter
#: tweepy.asynchronous.streaming.AsyncStream.on_closed
#: tweepy.asynchronous.streaming.AsyncStream.on_data
#: tweepy.asynchronous.streaming.AsyncStream.on_delete
#: tweepy.asynchronous.streaming.AsyncStream.on_disconnect_message
#: tweepy.asynchronous.streaming.AsyncStream.on_exception
#: tweepy.asynchronous.streaming.AsyncStream.on_limit
#: tweepy.asynchronous.streaming.AsyncStream.on_request_error
#: tweepy.asynchronous.streaming.AsyncStream.on_scrub_geo
#: tweepy.asynchronous.streaming.AsyncStream.on_status
#: tweepy.asynchronous.streaming.AsyncStream.on_status_withheld
#: tweepy.asynchronous.streaming.AsyncStream.on_user_withheld
#: tweepy.asynchronous.streaming.AsyncStream.on_warning
#: tweepy.asynchronous.streaming.AsyncStream.sample
msgid "Parameters"
msgstr ""

#: of tweepy.asynchronous.streaming.AsyncStream:5
msgid "Twitter API Consumer Key"
msgstr ""

#: of tweepy.asynchronous.streaming.AsyncStream:7
msgid "Twitter API Consumer Secret"
msgstr ""

#: of tweepy.asynchronous.streaming.AsyncStream:9
msgid "Twitter API Access Token"
msgstr ""

#: of tweepy.asynchronous.streaming.AsyncStream:11
msgid "Twitter API Access Token Secret"
msgstr ""

#: of tweepy.asynchronous.streaming.AsyncStream:13
msgid "Number of times to attempt to (re)connect the stream."
msgstr ""

#: of tweepy.asynchronous.streaming.AsyncStream:15
msgid "Proxy URL"
msgstr ""

#: of tweepy.asynchronous.streaming.AsyncStream:20
msgid "Aiohttp client session used to connect to the API"
msgstr ""

#: of tweepy.asynchronous.streaming.AsyncStream
msgid "type"
msgstr ""

#: of tweepy.asynchronous.streaming.AsyncStream:22
msgid "Optional[aiohttp.ClientSession]"
msgstr ""

#: of tweepy.asynchronous.streaming.AsyncStream:26
#: tweepy.asynchronous.streaming.AsyncStream.filter:38
#: tweepy.asynchronous.streaming.AsyncStream.sample:17
msgid "The task running the stream"
msgstr ""

#: of tweepy.asynchronous.streaming.AsyncStream:28
msgid "Optional[asyncio.Task]"
msgstr ""

#: of tweepy.asynchronous.streaming.AsyncStream:32
msgid "User agent used when connecting to the API"
msgstr ""

#: of tweepy.asynchronous.streaming.AsyncStream:34
msgid "str"
msgstr ""

#: of tweepy.asynchronous.streaming.AsyncStream.filter:1
msgid "Filter realtime Tweets"
msgstr ""

#: of tweepy.asynchronous.streaming.AsyncStream.filter:3
msgid ""
"A list of user IDs, indicating the users to return statuses for in the "
"stream. See https://developer.twitter.com/en/docs/twitter-api/v1/tweets"
"/filter-realtime/guides/basic-stream-parameters for more information."
msgstr ""

#: of tweepy.asynchronous.streaming.AsyncStream.filter:7
msgid ""
"Keywords to track. Phrases of keywords are specified by a list. See "
"https://developer.twitter.com/en/docs/tweets/filter-realtime/guides"
"/basic-stream-parameters for more information."
msgstr ""

#: of tweepy.asynchronous.streaming.AsyncStream.filter:11
msgid ""
"Specifies a set of bounding boxes to track. See "
"https://developer.twitter.com/en/docs/tweets/filter-realtime/guides"
"/basic-stream-parameters for more information."
msgstr ""

#: of tweepy.asynchronous.streaming.AsyncStream.filter:15
msgid ""
"Setting this parameter to one of none, low, or medium will set the "
"minimum value of the filter_level Tweet attribute required to be included"
" in the stream. The default value is none, which includes all available "
"Tweets.  When displaying a stream of Tweets to end users (dashboards or "
"live feeds at a presentation or conference, for example) it is suggested "
"that you set this value to medium."
msgstr ""

#: of tweepy.asynchronous.streaming.AsyncStream.filter:15
msgid ""
"Setting this parameter to one of none, low, or medium will set the "
"minimum value of the filter_level Tweet attribute required to be included"
" in the stream. The default value is none, which includes all available "
"Tweets."
msgstr ""

#: of tweepy.asynchronous.streaming.AsyncStream.filter:20
msgid ""
"When displaying a stream of Tweets to end users (dashboards or live feeds"
" at a presentation or conference, for example) it is suggested that you "
"set this value to medium."
msgstr ""

#: of tweepy.asynchronous.streaming.AsyncStream.filter:24
#: tweepy.asynchronous.streaming.AsyncStream.sample:3
msgid ""
"Setting this parameter to a comma-separated list of `BCP 47`_ language "
"identifiers corresponding to any of the languages listed on Twitterâ€™s "
"`advanced search`_ page will only return Tweets that have been detected "
"as being written in the specified languages. For example, connecting with"
" language=en will only stream Tweets detected to be in the English "
"language."
msgstr ""

#: of tweepy.asynchronous.streaming.AsyncStream.filter:31
#: tweepy.asynchronous.streaming.AsyncStream.sample:10
msgid ""
"Specifies whether stall warnings should be delivered. See "
"https://developer.twitter.com/en/docs/tweets/filter-realtime/guides"
"/basic-stream-parameters for more information."
msgstr ""

#: of tweepy.asynchronous.streaming.AsyncStream.filter
#: tweepy.asynchronous.streaming.AsyncStream.sample
msgid "Raises"
msgstr ""

#: of tweepy.asynchronous.streaming.AsyncStream.filter:36
msgid ""
"When the stream is already connected or when the number of location     "
"coordinates is not a multiple of 4"
msgstr ""

#: of tweepy.asynchronous.streaming.AsyncStream.filter
#: tweepy.asynchronous.streaming.AsyncStream.sample
msgid "Returns"
msgstr ""

#: of tweepy.asynchronous.streaming.AsyncStream.filter
#: tweepy.asynchronous.streaming.AsyncStream.sample
msgid "Return type"
msgstr ""

#: of tweepy.asynchronous.streaming.AsyncStream.filter:42
#: tweepy.asynchronous.streaming.AsyncStream.on_data:11
#: tweepy.asynchronous.streaming.AsyncStream.sample:21
msgid "References"
msgstr ""

#: of tweepy.asynchronous.streaming.AsyncStream.filter:43
msgid ""
"https://developer.twitter.com/en/docs/twitter-api/v1/tweets/filter-"
"realtime/api-reference/post-statuses-filter"
msgstr ""

#: of tweepy.asynchronous.streaming.AsyncStream.sample:1
msgid "Sample realtime Tweets"
msgstr ""

#: of tweepy.asynchronous.streaming.AsyncStream.sample:15
msgid "When the stream is already connected"
msgstr ""

#: of tweepy.asynchronous.streaming.AsyncStream.sample:22
msgid ""
"https://developer.twitter.com/en/docs/twitter-api/v1/tweets/sample-"
"realtime/api-reference/get-statuses-sample"
msgstr ""

#: of tweepy.asynchronous.streaming.AsyncStream.disconnect:1
msgid "Disconnect the stream"
msgstr ""

#: of tweepy.asynchronous.streaming.AsyncStream.on_closed:1
#: tweepy.asynchronous.streaming.AsyncStream.on_connect:1
#: tweepy.asynchronous.streaming.AsyncStream.on_connection_error:1
#: tweepy.asynchronous.streaming.AsyncStream.on_data:1
#: tweepy.asynchronous.streaming.AsyncStream.on_delete:1
#: tweepy.asynchronous.streaming.AsyncStream.on_disconnect:1
#: tweepy.asynchronous.streaming.AsyncStream.on_disconnect_message:1
#: tweepy.asynchronous.streaming.AsyncStream.on_exception:1
#: tweepy.asynchronous.streaming.AsyncStream.on_keep_alive:1
#: tweepy.asynchronous.streaming.AsyncStream.on_limit:1
#: tweepy.asynchronous.streaming.AsyncStream.on_request_error:1
#: tweepy.asynchronous.streaming.AsyncStream.on_scrub_geo:1
#: tweepy.asynchronous.streaming.AsyncStream.on_status:1
#: tweepy.asynchronous.streaming.AsyncStream.on_status_withheld:1
#: tweepy.asynchronous.streaming.AsyncStream.on_user_withheld:1
#: tweepy.asynchronous.streaming.AsyncStream.on_warning:1
msgid "|coroutine|"
msgstr ""

#: of tweepy.asynchronous.streaming.AsyncStream.on_closed:3
msgid "This is called when the stream has been closed by Twitter."
msgstr ""

#: of tweepy.asynchronous.streaming.AsyncStream.on_closed:5
msgid "The response from Twitter"
msgstr ""

#: of tweepy.asynchronous.streaming.AsyncStream.on_connect:3
msgid "This is called after successfully connecting to the streaming API."
msgstr ""

#: of tweepy.asynchronous.streaming.AsyncStream.on_connection_error:3
msgid "This is called when the stream connection errors or times out."
msgstr ""

#: of tweepy.asynchronous.streaming.AsyncStream.on_disconnect:3
msgid "This is called when the stream has disconnected."
msgstr ""

#: of tweepy.asynchronous.streaming.AsyncStream.on_exception:3
msgid "This is called when an unhandled exception occurs."
msgstr ""

#: of tweepy.asynchronous.streaming.AsyncStream.on_exception:5
msgid "The unhandled exception"
msgstr ""

#: of tweepy.asynchronous.streaming.AsyncStream.on_keep_alive:3
msgid "This is called when a keep-alive signal is received."
msgstr ""

#: of tweepy.asynchronous.streaming.AsyncStream.on_request_error:3
msgid "This is called when a non-200 HTTP status code is encountered."
msgstr ""

#: of tweepy.asynchronous.streaming.AsyncStream.on_request_error:5
msgid "The HTTP status code encountered"
msgstr ""

#: of tweepy.asynchronous.streaming.AsyncStream.on_data:3
msgid ""
"This is called when raw data is received from the stream. This method "
"handles sending the data to other methods, depending on the message type."
msgstr ""

#: of tweepy.asynchronous.streaming.AsyncStream.on_data:7
msgid "The raw data from the stream"
msgstr ""

#: of tweepy.asynchronous.streaming.AsyncStream.on_data:12
msgid ""
"https://developer.twitter.com/en/docs/twitter-api/v1/tweets/filter-"
"realtime/guides/streaming-message-types"
msgstr ""

#: of tweepy.asynchronous.streaming.AsyncStream.on_status:3
msgid "This is called when a status is received."
msgstr ""

#: of tweepy.asynchronous.streaming.AsyncStream.on_status:5
msgid "The Status received"
msgstr ""

#: of tweepy.asynchronous.streaming.AsyncStream.on_delete:3
msgid "This is called when a status deletion notice is received."
msgstr ""

#: of tweepy.asynchronous.streaming.AsyncStream.on_delete:5
msgid "The ID of the deleted Tweet"
msgstr ""

#: of tweepy.asynchronous.streaming.AsyncStream.on_delete:7
msgid "The ID of the author of the Tweet"
msgstr ""

#: of tweepy.asynchronous.streaming.AsyncStream.on_disconnect_message:3
msgid "This is called when a disconnect message is received."
msgstr ""

#: of tweepy.asynchronous.streaming.AsyncStream.on_disconnect_message:5
msgid "The disconnect message"
msgstr ""

#: of tweepy.asynchronous.streaming.AsyncStream.on_limit:3
msgid "This is called when a limit notice is received."
msgstr ""

#: of tweepy.asynchronous.streaming.AsyncStream.on_limit:5
msgid ""
"Total count of the number of undelivered Tweets since the connection was "
"opened"
msgstr ""

#: of tweepy.asynchronous.streaming.AsyncStream.on_scrub_geo:3
msgid "This is called when a location deletion notice is received."
msgstr ""

#: of tweepy.asynchronous.streaming.AsyncStream.on_scrub_geo:5
msgid "The location deletion notice"
msgstr ""

#: of tweepy.asynchronous.streaming.AsyncStream.on_status_withheld:3
msgid "This is called when a status withheld content notice is received."
msgstr ""

#: of tweepy.asynchronous.streaming.AsyncStream.on_status_withheld:5
msgid "The status withheld content notice"
msgstr ""

#: of tweepy.asynchronous.streaming.AsyncStream.on_user_withheld:3
msgid "This is called when a user withheld content notice is received."
msgstr ""

#: of tweepy.asynchronous.streaming.AsyncStream.on_user_withheld:5
msgid "The user withheld content notice"
msgstr ""

#: of tweepy.asynchronous.streaming.AsyncStream.on_warning:3
msgid "This is called when a stall warning message is received."
msgstr ""

#: of tweepy.asynchronous.streaming.AsyncStream.on_warning:5
msgid "The stall warning"
msgstr ""

